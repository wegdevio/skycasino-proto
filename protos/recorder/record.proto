syntax = "proto3";
package recorder;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "tagger/tagger.proto";

// 卡牌，代表在此局中使用的各類物品
message Card {

  // 卡牌ID：牌唯一碼
  string id = 1;
  // 卡牌代碼
  string code = 2;
  // 順序
  int64 index = 3;
  // 可見
  bool visible = 4;
  // 橫放、直放...
  optional int64 status = 5 [(tagger.tags) = "bson:\"status,omitempty\""];

  // 明文
  optional string plain_text = 8 [(tagger.tags) = "bson:\"plainText,omitempty\""];
  // 簽章
  optional string signature = 9 [(tagger.tags) = "bson:\"signature,omitempty\""];
  // 簽章方法
  optional string sign_algorithm = 10 [(tagger.tags) = "bson:\"signAlgorithm,omitempty\""];

}

// 卡牌列表
message CardList {

  string card_type = 1;

  // 列表
  repeated Card list = 2;

  // 牌型
  repeated string patterns = 3;

}

// 動作類型
enum StepActionType {

  // 未指定
  STEP_ACTION_TYPE_UNSPECIFIED = 0;
  // 派發資源
  ADD = 1;
  // 設定指定資源
  SET = 2;
  // 改寫全部資源;
  SETALL = 3;
  // 將資源從場上移除
  REMOVE = 4;
  // 讀取卡牌資料
  READ = 5;
  // 讀卡但不可見
  READ_UNVISIBLE = 6;
  // 移轉資源
  TRANSFER = 7;
  // 卡片翻開
  VISIBLE = 8;
  // 卡牌狀態改變
  STATUS = 9;
  // 此步驟不須修改資源
  NONE = 10;

}

// 執行動作：對某些資源進行增、刪、移轉
message StepAction {

  // 行為說明代碼
  string code = 2;
  // 動作類型
  StepActionType type = 3;
  // 資源擁有座位。
  optional int32 source_seat = 4 [(tagger.tags) = "bson:\"sourceSeat,omitempty\""];
  // 資源轉移目標座位。
  optional int32 target_seat = 5 [(tagger.tags) = "bson:\"targetSeat,omitempty\""];
  // 目標卡牌資源
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 6 [(tagger.tags) = "bson:\"cards,omitempty\""];
  // 目標分數資源
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 7 [(tagger.tags) = "bson:\"scores,omitempty\""];

  // （可選）附加資料
  google.protobuf.Any data = 8 [(tagger.tags) = "bson:\"data,omitempty\""];

}

// 下注步驟
enum BetStep {

  // 未指定，此步驟與下注無關
  BET_STEP_UNSPECIFIED = 0;
  
  // 開始下注
  ROUND_BET = 1;

  // 停止下注
  NO_MORE_BET = 3;

  // 牌異動
  CARD = 4;
}

// 遊戲步驟
message Step {

  // 步驟代碼：StepCode
  int32 code = 2;
  // 玩家、執行者：SeatCode
  optional int32 seat = 3 [(tagger.tags) = "bson:\"seat,omitempty\""];
  // 時間戳
  google.protobuf.Timestamp timestamp = 5;
  // 執行動作
  repeated StepAction actions = 6 [(tagger.tags) = "bson:\"action,omitempty\""];
  // 執行錯誤
  optional string error = 8 [(tagger.tags) = "bson:\"error,omitempty\""];
  // 取消
  optional bool cancel = 9 [(tagger.tags) = "bson:\"cancel,omitempty\""];
  // 分配毫秒數
  optional int64 duration = 10 [(tagger.tags) = "bson:\"duration,omitempty\""];
  // 下注動作
  BetStep bet_step = 11;

}

// 座位
message Seat {

  // 座位功能代碼：SeatCode
  int32 code = 2;
  // 各類手牌
  // key: ResourceTypeCode, value: 卡牌陣列
  map<int32, CardList> cards = 3 [(tagger.tags) = "bson:\"cards,omitempty\""];
  // 各類分數
  // key: ResourceTypeCode, value: 分數值。
  map<int32, int64> scores = 4 [(tagger.tags) = "bson:\"scores,omitempty\""];

}

// 記錄各座位狀態
message Result {

  // 判讀類型代碼：ResultRecordTypeCode
  int32 code = 2;
  // 紀錄者座位代碼
  optional int32 by_seat = 3 [(tagger.tags) = "bson:\"bySeat,omitempty\""];
  // 時間戳
  google.protobuf.Timestamp timestamp = 4;
  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 5;

}

// 多媒體
message URLMedia {

  // 代碼
  string code = 1;

  // 類型：hls, flv...
  string mime = 2;

  // url
  string url = 3;

}

// 紀錄
message RoundRecord {

  // 紀錄ID
  bytes id = 1 [(tagger.tags) = "bson:\"_id,omitempty\""];
  // 遊戲供應
  string supplier = 2;
  // 遊戲類型
  string game_type = 3;
  // 遊戲子類型
  string game_subtype = 4;
  // 遊戲版本
  string game_version = 5;
  // 遊戲代碼
  string game_code = 6;
  // 桌代碼
  string table_code = 7;
  // 班代碼
  string shift_code = 8;
  // 此排班局數
  int64 shift_round = 9;
  // 使用靴代碼
  string shoe_code = 10;
    // 使用此洗牌第幾局，從1開始計算
  int64 shoe_round = 11;
  // 局代碼
  string round_code = 12;
  // 標籤
  map<string, string> tags = 13;
  // 開始時間
  google.protobuf.Timestamp ts_start = 16;
  
  // 下注狀態
  BetStep bet_step = 17;
  // 座位組
  // key: SeatCode, value: Seat
  map<int32, Seat> seats = 24 [(tagger.tags) = "bson:\"seats,omitempty\""];
  // 玩家入座
  // key: SeatCode, value: 玩家code。
  map<int32, string> players = 25 [(tagger.tags) = "bson:\"players,omitempty\""];


  // 歷程
  repeated Step process = 26 [(tagger.tags) = "bson:\"process,omitempty\""];
  // 判讀
  repeated Result results = 27 [(tagger.tags) = "bson:\"results,omitempty\""];

  // 結束
  bool is_end = 18;
  // 結束時間
  google.protobuf.Timestamp ts_end = 19 [(tagger.tags) = "bson:\"tsEnd,omitempty\"" ];

  // 取消
  optional bool cancel = 20 [(tagger.tags) = "bson:\"cancel,omitempty\""];
  // 取消代碼：CancelReasonCode
  optional string cancel_code = 21 [(tagger.tags) = "bson:\"cancelCode,omitempty\""];
  // 取消備註
  optional string cancel_message = 22 [(tagger.tags) = "bson:\"cancelMessage,omitempty\""];

  // 附加媒體
  map<string, URLMedia> mideas = 28;

  // 財神倍率
  map<string, int64> fortune_rates = 29;

}

message Deck {

  // 卡牌
  CardList cards = 1;
  // 起始位置（削牌後）
  int64 start_index = 2;
  // 切牌位置
  optional int64 cut_index = 3 [(tagger.tags) = "bson:\"cutIndex,omitempty\""];
  // 目前位置
  int64 index = 4;

}

// 靴紀錄
message ShoeRecord {

  // 紀錄ID
  bytes id = 1  [(tagger.tags) = "bson:\"_id,omitempty\"" ];
  // 遊戲供應
  string supplier = 2;
  // 遊戲類型
  string game_type = 3;
  // 遊戲子類型
  string game_subtype = 4;
  // 遊戲版本
  string game_version = 5;
  // 遊戲代碼
  string game_code = 6;
  // 桌代碼
  string table_code = 7;
  // 班代碼
  string shift_code = 8;
  // 使用洗牌代碼
  string shoe_code = 10;
  // 此牌靴開始使用時間
  google.protobuf.Timestamp ts_start = 16;
  // cardList
  map<int32, Deck> decks = 24 [(tagger.tags) = "bson:\"decks,omitempty\""];

  // 此牌靴已使用完畢，不可再使用
  bool is_end = 18;
  // 牌靴使用完畢時間
  google.protobuf.Timestamp ts_end = 19 [(tagger.tags) = "bson:\"tsEnd,omitempty\""];

}

// 排班
message ShiftRecord {

  // 紀錄ID
  bytes id = 1  [(tagger.tags) = "bson:\"_id,omitempty\"" ];
  // 遊戲供應
  string supplier = 2;
  // 遊戲類型
  string game_type = 3;
  // 遊戲子類型
  string game_subtype = 4;
  // 遊戲版本
  string game_version = 5;
  // 遊戲代碼
  string game_code = 6;
  // 桌代碼
  string table_code = 7;
  // 班代碼
  string shift_code = 8;
  // 開始時間
  google.protobuf.Timestamp ts_start = 16;
  // 標籤
  map<string, string> tags = 13;

  // 執行遊戲局
  repeated string round_codes = 24;
  // 執行遊戲靴
  repeated string shoe_codes = 25;

  // 結束
  bool is_end = 18;
  // 結束時間
  google.protobuf.Timestamp ts_end = 19 [(tagger.tags) = "bson:\"tsEnd,omitempty\"" ];

}
